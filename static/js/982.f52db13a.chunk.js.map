{"version":3,"file":"static/js/982.f52db13a.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  width: 400px;\n  padding: 20px;\n\n  margin-top: 20px;\n  background-color: white;\n  border-radius: 20px;\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const MainForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin: 0 auto;\n  gap: 24px;\n`;\nexport const Btn = styled.button`\n  margin-bottom: 20px;\n  border: none;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  display: block;\n  min-width: 169px;\n  height: 40px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  color: white;\n  background-color: #7c90f3;\n  margin-left: auto;\n  margin-right: auto;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 25px;\n  font-weight: 500;\n  text-transform: capitalize;\n  text-shadow: 0 1px 1px #2d2020;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  font-size: 16px;\n`;\n","export const selectContacts = state => state.contactList.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","import {\n  MainForm,\n  Btn,\n  StyledLabel,\n  StyledField,\n  Error,\n} from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nconst PhonebookSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddPhone = (values, actions) => {\n    if (contacts.some(contact => contact.name === values.name)) {\n      alert('Contact with the same name already exists!');\n    } else {\n      dispatch(addContact(values));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={PhonebookSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        handleAddPhone(values);\n      }}\n    >\n      <MainForm>\n        <StyledLabel>\n          Name\n          <StyledField name=\"name\" placeholder=\"Name\" />\n          <Error component={'span'} name=\"name\" />\n        </StyledLabel>\n\n        <StyledLabel>\n          Phone\n          <StyledField name=\"number\" placeholder=\"Number\" />\n          <Error component={'span'} name=\"number\" />\n        </StyledLabel>\n\n        <Btn type=\"submit\">Add contact</Btn>\n      </MainForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n`;\n\nexport const Name = styled.p`\n  font-size: 20px;\n  line-height: 1.11;\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: capitalize;\n`;\n\nexport const BtnDelete = styled.button`\n\n  border: none;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n  display: block;\n  min-width: 140px;\n  height: 20px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  color: white;\n  background-color: #7c90f3;\n  \n \n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BtnDelete, List, Name } from './ContactList.styled';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/contactsSelectors';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contactsOperations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterContactsByName = () => {\n    const ff = filter.toLowerCase() ?? '';\n    return contacts.filter(contact => contact.name.toLowerCase().includes(ff));\n  };\n\n  const filteredContacts = filterContactsByName();\n\n  return (\n    <ul>\n      {filteredContacts.map(item => (\n        <List key={item.id}>\n          <Name>\n            {item.name}: <span>{item.number}</span>\n          </Name>\n          <BtnDelete onClick={() => dispatch(deleteContact(item.id))}>\n            Delete\n          </BtnDelete>\n        </List>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components'\n\nexport const FilterSection = styled.div`\nmargin-left: auto;\nmargin-right: auto;\ntext-align: center;\nwidth: 300px;\npadding: 20px;\n\nmargin-top:20px;\nbackground-color: white;\nborder-radius:20px;\n\n` \nexport const StyledSection = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 24px;\n\n` \n\nexport const Input = styled.input`\n  max-width: 400px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\n\nexport const StyledTitle = styled.pattern`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n  text-shadow: 0 1px 1px #2d2020;\n  \n`;\n\n\n","import {\n  FilterSection,\n  Input,\n  StyledTitle,\n  StyledSection,\n} from './Filter.styled.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterReducer.js';\nimport { selectFilter } from 'redux/contacts/contactsSelectors.js';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleSearchNumber = value => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterSection>\n      <StyledSection>\n        <StyledTitle>Find contacts by name</StyledTitle>\n        <Input\n          type=\"text\"\n          value={filter}\n          onChange={e => handleSearchNumber(e.target.value)}\n          placeholder=\"Number filter\"\n        />\n      </StyledSection>\n    </FilterSection>\n  );\n};\n","import { Container } from 'components/App.styled';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\n\nexport function Phonebook() {\n  return (\n    <div>\n      <Container>\n        <h2>Add new contact</h2>\n        <ContactForm />\n      </Container>\n\n      <Container>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\nexport default Phonebook;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","MainForm","Form","Btn","_templateObject2","StyledLabel","_templateObject3","StyledField","Field","_templateObject4","Error","ErrorMessage","_templateObject5","selectContacts","state","contactList","contacts","selectFilter","filter","PhonebookSchema","Yup","shape","name","min","max","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","resetForm","some","contact","alert","addContact","handleAddPhone","children","_jsxs","placeholder","component","type","List","Name","BtnDelete","ContactList","useEffect","fetchContacts","filteredContacts","_filter$toLowerCase","ff","toLowerCase","includes","filterContactsByName","map","item","onClick","deleteContact","id","FilterSection","StyledSection","Input","StyledTitle","Filter","value","onChange","e","target","setFilter","Phonebook"],"sourceRoot":""}